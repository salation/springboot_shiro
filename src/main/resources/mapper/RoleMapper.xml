<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.shiro_practice.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.example.shiro_practice.entity.Role">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="descpt" property="descpt" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="insert_uid" property="insertUid" jdbcType="INTEGER"/>
        <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, role_name, descpt, code, insert_uid, insert_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
        <include refid="Base_Column_List"/>
    from role
    where id = #{id,jdbcType=INTEGER}
</select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from role
        where id = #{id,jdbcType=INTEGER}
    </delete>



    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.example.shiro_practice.entity.Role">
        insert into role (id, role_name, descpt,
        code, insert_uid, insert_time,
        update_time)
        values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{descpt,jdbcType=VARCHAR},
        #{code,jdbcType=VARCHAR}, #{insertUid,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>


    <!--=Start findRoleAndPerms 查询角色列表-->
    <resultMap id="rolePerms" type="com.example.shiro_practice.entity.RoleVO">
        <id column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="code" property="code"/>
        <result column="descpt" property="descpt"/>
        <result column="insert_uid" property="insertUid"/>
        <result column="insert_time" property="insertTime"/>
        <collection property="rolePerms" ofType="com.example.shiro_practice.entity.RolePermissionKey">
            <result column="role_id" property="roleId"/>
            <result column="permit_id" property="permitId"/>
        </collection>
    </resultMap>

    <select id="findRoleAndPerms" resultMap="rolePerms">
        select
        r.*,rp.role_id,rp.permit_id
        from role r
        INNER JOIN role_permission rp ON r.id=rp.role_id
        WHERE r.id=#{id}
    </select>
    <!--=End findRoleAndPerms 查询角色列表-->

    <!--=Start getRoleByUserId 根据用户id查询角色数据-->
    <select id="getRoleByUserId" resultType="com.example.shiro_practice.entity.Role">
        select
        ur.role_id id,r.role_name,r.code
        from user_role ur
        INNER JOIN role r ON r.id=ur.role_id
        WHERE ur.user_id=#{userId}
    </select>
    <!--&lt;!&ndash;=End getRoleByUserId 根据用户id查询角色数据&ndash;&gt;-->


    <!--=Start selectByCode 根据code查询角色数据-->
    <select id="selectByCode" resultType="com.example.shiro_practice.entity.Role">
        select
        <include refid="Base_Column_List"/>
        from role
        WHERE code=#{code}
    </select>
    <!--&lt;!&ndash;=End getRoleByUserId 根据用户id查询角色数据&ndash;&gt;-->


    <!--=Start getRoles 查询角色列表-->
    <select id="getRoles" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
    </select>
    <!--=End getRoles 查询角色列表-->
</mapper>
